#!/bin/bash
# vim: set ft=sh

set -e -u

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

TMPDIR=${TMPDIR:-/tmp}

source "$(dirname "$0")/common.sh"

destination="$1"

if [[ -z "${destination}" ]]; then
    echo "Usage: $0 <path/to/destination>" >&2
    exit 1
fi

payload="$(mktemp "${TMPDIR}/gitlab-merge-request-resource.XXXXXX")"

cat > "${payload}" <&0

configure_ssl_verification "${payload}"

uri="$(jq -r '.source.uri // ""' < "${payload}")"
username="$(jq -r '.source.username // ""' < "${payload}")"
password="$(jq -r '.source.password // ""' < "${payload}")"
private_key="$(jq -r '.source.private_key // ""' < "${payload}")"
version="$(jq -r '.version // ""' < "${payload}")"
commit_sha="$(echo "${version}" | jq -r '.sha // ""')"

if [[ ! -z "${private_key}" ]]; then
    gitlab_host="$(echo "${uri}" | sed -rn 's/.*git@(.*):([0-9]*\/+)?(.*)\.git/\1/p')"
    port="$(echo "${uri}" | sed -rn 's/.*git@(.*):([0-9]*\/+)?(.*)\.git/\2/p')"
    port=${port///} # remove trailing slash

    id_rsa="${HOME}/.ssh/id_rsa"
    mkdir -p "${HOME}/.ssh/"
    echo "${private_key}" > "${id_rsa}"
    chmod 500 "${id_rsa}"

    if [[ ! -z "${port}" ]]; then
        ssh-keyscan -t rsa -p "${port}" "${gitlab_host}" > "${HOME}/.ssh/known_hosts"
    else
        ssh-keyscan -t rsa "${gitlab_host}" > "${HOME}/.ssh/known_hosts"
    fi
else
    echo "default login ${username} password ${password}" > "${HOME}/.netrc" # Save credentials for git push below
fi

git clone "${uri}" "${destination}"

cd "${destination}"

git reset --hard "${commit_sha}"

jq -n "{
    version: ${version},
    metadata: $(git_metadata)
}" >&3
